class Debug {

    static int offset;

    function void debug(String message, int line, int column, boolean useOffset) {
        do Debug.setCoursor(line,useOffset,true,0);
        do Output.printString("       ");
        do Debug.setCoursor(line,useOffset,false,column);
        do Output.printString(message);
        return;
    }
    
    function void debugInt(int intValue, int line, int column, boolean useOffset) {
        do Debug.setCoursor(line,useOffset,true,0);
        do Output.printString("       ");
        do Debug.setCoursor(line,useOffset,false,column);
        do Output.printInt(intValue);
        return;
    }

    function void debugChar(char message, int line, int column, boolean useOffset) {
        do Debug.setCoursor(line,useOffset,true,0);
        do Output.printString("       ");
        do Debug.setCoursor(line,useOffset,false,column);
        do Output.printChar(message);
        return;
    }

    function void debugBoolean(boolean val, int line, int column, boolean useOffset) {
        do Debug.setCoursor(line,useOffset,true,0);
        do Output.printString("       ");
        do Debug.setCoursor(line,useOffset,false,column);
        if (val = true) {
            do Output.printString("true");
        } else {
            do Output.printString("false");
        }
        return;
    }

    function void setCoursor(int line, boolean useOffset, boolean erasePrevLine, int column) {
        if (useOffset = true) {
            do Output.moveCursor(offset,column);
            if (erasePrevLine = false) {
                let offset = offset + 1;
                if (offset > 21) {
                    let offset = 0;
                }
            }
        } else {
            do Output.moveCursor(line,column);
        }
        return;
    }
}